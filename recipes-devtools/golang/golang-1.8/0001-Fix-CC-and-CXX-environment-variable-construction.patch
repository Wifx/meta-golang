diff --git a/src/cmd/go/build.go b/src/cmd/go/build.go
index 98a6509..2fc9a94 100644
--- a/src/cmd/go/build.go
+++ b/src/cmd/go/build.go
@@ -3100,12 +3100,24 @@ func (b *builder) gccCmd(objdir string) []string {
 	return b.ccompilerCmd("CC", defaultCC, objdir)
 }
 
+// gccCmdForReal returns a gcc command line, not just the prefix
+// defaultCC is defined in zdefaultcc.go, written by cmd/dist.
+func (b *builder) gccCmdForReal() []string {
+	return envList("CC", defaultCC)
+}
+
 // gxxCmd returns a g++ command line prefix
 // defaultCXX is defined in zdefaultcc.go, written by cmd/dist.
 func (b *builder) gxxCmd(objdir string) []string {
 	return b.ccompilerCmd("CXX", defaultCXX, objdir)
 }
 
+// gxxCmdForReal returns a g++ command line, not just the prefix
+// defaultCXX is defined in zdefaultcc.go, written by cmd/dist.
+func (b *builder) gxxCmdForReal() []string {
+	return envList("CXX", defaultCXX)
+}
+
 // gfortranCmd returns a gfortran command line prefix.
 func (b *builder) gfortranCmd(objdir string) []string {
 	return b.ccompilerCmd("FC", "gfortran", objdir)
diff --git a/src/cmd/go/env.go b/src/cmd/go/env.go
index 31710b7..a71a420 100644
--- a/src/cmd/go/env.go
+++ b/src/cmd/go/env.go
@@ -63,10 +63,9 @@ func mkEnv() []envVar {
 	}
 
 	cmd := b.gccCmd(".")
-	env = append(env, envVar{"CC", cmd[0]})
+	env = append(env, envVar{"CC", strings.Join(b.gccCmdForReal(), " ")})
 	env = append(env, envVar{"GOGCCFLAGS", strings.Join(cmd[3:], " ")})
-	cmd = b.gxxCmd(".")
-	env = append(env, envVar{"CXX", cmd[0]})
+	env = append(env, envVar{"CXX", strings.Join(b.gxxCmdForReal(), " ")})
 
 	if buildContext.CgoEnabled {
 		env = append(env, envVar{"CGO_ENABLED", "1"})
